---
name: Docker Image CI

on:
  workflow_dispatch:
  push:
    paths:
      - "Dockerfile"

env:
  LATEST_TAG: "jammy-3.12"
  REPO: "ndunnett/python"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu: ["jammy"]
        python: ["3.13.0a3", "3.12.2", "3.11.8", "3.10.13"]
    steps:

      - uses: actions/checkout@v4

      - name: Generate tag
        id: gen-tag
        run: |
          TAG="${{ matrix.ubuntu }}-$(cut -d '.' -f 1,2 <<< "${{ matrix.python }}")"
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Build unflattened image
        run: |
          set -eux
          docker build . --tag "$REPO:$TAG-unflattened" \
            --build-arg "PYTHON_VERSION=${{ matrix.python }}" \
            --build-arg "UBUNTU_TAG=${{ matrix.ubuntu }}"
        env:
          TAG: ${{ steps.gen-tag.outputs.tag }}

      - name: Flatten image
        run: |
          set -eux
          docker run --name "ndunnett-python-$TAG" "$REPO:$TAG-unflattened"
          docker export "ndunnett-python-$TAG" | docker import - "$REPO:$TAG"
          docker stop "ndunnett-python-$TAG" && docker remove "ndunnett-python-$TAG"
        env:
          TAG: ${{ steps.gen-tag.outputs.tag }}

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push and tag images
        run: |
          set -eux
          docker push "$REPO:$TAG-unflattened"
          docker push "$REPO:$TAG"
          if [ "$TAG" -eq "$LATEST_TAG" ]; then
            docker manifest create $REPO:$LATEST_TAG $REPO:$TAG
            docker manifest push $REPO:$LATEST_TAG
          fi
        env:
          TAG: ${{ steps.gen-tag.outputs.tag }}
